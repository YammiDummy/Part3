#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <fstream>
#include <sstream>
#include "Timer.h"

using namespace std;

template <typename T>
void Swap(T& a, T& b) {
    T temp;
    temp = a;
    a = b;
    b = temp;
};

template <typename T>
void SortPointers(vector<T> &vp) {
    sort(vp.begin(), vp.end(), [](T vp1, T vp2) {
        return *vp1 < *vp2;
        });
};

string create_string(const string& path) {
    string m_book;
    string vowels = "AaEeIiOoUu";
    ifstream in(path);

    if (in.is_open()) {
        stringstream ss;
        ss << in.rdbuf();
        m_book = ss.str();
        in.close();
        return m_book;
    }
    else
        cout << "Unable to create string." << endl;
    return "";
};

bool is_vowel(char c) {
    if (c == 'A' || c == 'a' || c == 'E' || c == 'e' || c == 'I' || c == 'i'              //создаем функцию-компаратор is_wovel для проверки на гласность.
                 || c == 'O' || c == 'o' || c == 'U' || c == 'u'  ) return true;
    else
        return false;
};





int main()
{  
    setlocale(LC_ALL, "RUS");
    string vowels = "AaEeIiOoUu";                                             // Строка с гласными буквами.
    string book = create_string("D:\\GB\\C++\\P3\\L2\\WP2.txt");              // функция для создаем строки из текстового файла.
    Timer timer;
                                                                              
     // Вариант 1. Алгоритм count_in() в связке с find().
    
    timer.start("Связка count_in() и find()");
    cout << "Количество гласных букв: " <<
        count_if(book.begin(), book.end(), [vowels](const auto& ch) {
        if (vowels.find(ch) >= 0 && (vowels.find(ch) < vowels.size())) {
            return true;
        }
        else
            return false;
            }) << endl;
    timer.print();

    // Вариант 2. Алгоритм count_in() в связке с for.

    timer.start("Связка count_in() и find()");
    cout << "Количество гласных букв: " <<
    count_if(book.begin(), book.end(), [vowels](const auto& ch) {
        for (int i = 0; i < vowels.size(); ++i) {
            if (ch == vowels[i]) return true;
        };
        return false;
        }) << endl;
    timer.print();

    // Вариант 3. Цикл for в связке с find().

    timer.start("Связка цикла for и find()");
    cout << "Количество гласных букв: ";
    int vowel_count = 0;
    for (int i = 0; i < book.size(); i++) {
        if (vowels.find(book[i]) >= 0 && (vowels.find(book[i]) < vowels.size())) vowel_count++;
    }
    cout << vowel_count << endl;
    timer.print();

    // Вариант 4. Цикл for используется дважды.

    timer.start("Цикл for используется дважды()");
    cout << "Количество гласных букв: ";
    vowel_count = 0;
    for (int i = 0; i < book.size(); i++) {
        for (int j = 0; j < vowels.size(); j++) {
            if (book[i] == vowels[j]) vowel_count++;
        };
    };
    cout << vowel_count << endl;
    timer.print();

    // Вариант 5. Использование функции is_vowel().

    timer.start("Функция is_vowel()");
    cout << "Количество гласных букв: " <<
        count_if(book.begin(), book.end(), is_vowel) << endl;
    timer.print();
}
